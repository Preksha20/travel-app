import { AfterViewChecked, AfterViewInit, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
/**
 * Slick component
 */
import * as ɵngcc0 from '@angular/core';
export declare class SlickCarouselComponent implements OnDestroy, OnChanges, AfterViewInit, AfterViewChecked {
    private el;
    private zone;
    private platformId;
    config: any;
    afterChange: EventEmitter<any>;
    beforeChange: EventEmitter<any>;
    breakpoint: EventEmitter<any>;
    destroy: EventEmitter<any>;
    init: EventEmitter<any>;
    $instance: any;
    currentIndex: number;
    slides: any[];
    initialized: boolean;
    private _removedSlides;
    private _addedSlides;
    /**
     * Constructor
     */
    constructor(el: ElementRef, zone: NgZone, platformId: string);
    /**
     * On component destroy
     */
    ngOnDestroy(): void;
    ngAfterViewInit(): void;
    /**
     * On component view checked
     */
    ngAfterViewChecked(): void;
    /**
     * init slick
     */
    initSlick(): void;
    addSlide(slickItem: SlickItemDirective): void;
    removeSlide(slickItem: SlickItemDirective): void;
    /**
     * Slick Method
     */
    slickGoTo(index: number): void;
    slickNext(): void;
    slickPrev(): void;
    slickPause(): void;
    slickPlay(): void;
    unslick(): void;
    ngOnChanges(changes: SimpleChanges): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SlickCarouselComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SlickCarouselComponent, "ngx-slick-carousel", ["slick-carousel"], {
    "config": "config";
}, {
    "afterChange": "afterChange";
    "beforeChange": "beforeChange";
    "breakpoint": "breakpoint";
    "destroy": "destroy";
    "init": "init";
}, never>;
}
export declare class SlickItemDirective implements OnInit, OnDestroy {
    el: ElementRef;
    private platformId;
    private carousel;
    constructor(el: ElementRef, platformId: string, carousel: SlickCarouselComponent);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SlickItemDirective>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<SlickItemDirective, "[ngxSlickItem]", never, {}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpY2suY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbInNsaWNrLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztBQUlBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNkNBOzs7Ozs7Ozs7O0FBUUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBZnRlclZpZXdDaGVja2VkLCBBZnRlclZpZXdJbml0LCBFbGVtZW50UmVmLCBFdmVudEVtaXR0ZXIsIE5nWm9uZSwgT25DaGFuZ2VzLCBPbkRlc3Ryb3ksIE9uSW5pdCwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuLyoqXG4gKiBTbGljayBjb21wb25lbnRcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2xpY2tDYXJvdXNlbENvbXBvbmVudCBpbXBsZW1lbnRzIE9uRGVzdHJveSwgT25DaGFuZ2VzLCBBZnRlclZpZXdJbml0LCBBZnRlclZpZXdDaGVja2VkIHtcbiAgICBwcml2YXRlIGVsO1xuICAgIHByaXZhdGUgem9uZTtcbiAgICBwcml2YXRlIHBsYXRmb3JtSWQ7XG4gICAgY29uZmlnOiBhbnk7XG4gICAgYWZ0ZXJDaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIGJlZm9yZUNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgYnJlYWtwb2ludDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgZGVzdHJveTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgaW5pdDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgJGluc3RhbmNlOiBhbnk7XG4gICAgY3VycmVudEluZGV4OiBudW1iZXI7XG4gICAgc2xpZGVzOiBhbnlbXTtcbiAgICBpbml0aWFsaXplZDogYm9vbGVhbjtcbiAgICBwcml2YXRlIF9yZW1vdmVkU2xpZGVzO1xuICAgIHByaXZhdGUgX2FkZGVkU2xpZGVzO1xuICAgIC8qKlxuICAgICAqIENvbnN0cnVjdG9yXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsIHpvbmU6IE5nWm9uZSwgcGxhdGZvcm1JZDogc3RyaW5nKTtcbiAgICAvKipcbiAgICAgKiBPbiBjb21wb25lbnQgZGVzdHJveVxuICAgICAqL1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogT24gY29tcG9uZW50IHZpZXcgY2hlY2tlZFxuICAgICAqL1xuICAgIG5nQWZ0ZXJWaWV3Q2hlY2tlZCgpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIGluaXQgc2xpY2tcbiAgICAgKi9cbiAgICBpbml0U2xpY2soKTogdm9pZDtcbiAgICBhZGRTbGlkZShzbGlja0l0ZW06IFNsaWNrSXRlbURpcmVjdGl2ZSk6IHZvaWQ7XG4gICAgcmVtb3ZlU2xpZGUoc2xpY2tJdGVtOiBTbGlja0l0ZW1EaXJlY3RpdmUpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIFNsaWNrIE1ldGhvZFxuICAgICAqL1xuICAgIHNsaWNrR29UbyhpbmRleDogbnVtYmVyKTogdm9pZDtcbiAgICBzbGlja05leHQoKTogdm9pZDtcbiAgICBzbGlja1ByZXYoKTogdm9pZDtcbiAgICBzbGlja1BhdXNlKCk6IHZvaWQ7XG4gICAgc2xpY2tQbGF5KCk6IHZvaWQ7XG4gICAgdW5zbGljaygpOiB2b2lkO1xuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkO1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2xpY2tJdGVtRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICAgIGVsOiBFbGVtZW50UmVmO1xuICAgIHByaXZhdGUgcGxhdGZvcm1JZDtcbiAgICBwcml2YXRlIGNhcm91c2VsO1xuICAgIGNvbnN0cnVjdG9yKGVsOiBFbGVtZW50UmVmLCBwbGF0Zm9ybUlkOiBzdHJpbmcsIGNhcm91c2VsOiBTbGlja0Nhcm91c2VsQ29tcG9uZW50KTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG59XG4iXX0=