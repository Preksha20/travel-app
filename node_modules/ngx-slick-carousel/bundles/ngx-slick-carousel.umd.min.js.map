{"version":3,"sources":["ng://ngx-slick-carousel/slick.component.ts","ng://ngx-slick-carousel/index.ts"],"names":["SlickCarouselComponent","el","zone","platformId","this","afterChange","EventEmitter","beforeChange","breakpoint","destroy","init","slides","initialized","_removedSlides","_addedSlides","prototype","ngOnDestroy","unslick","ngAfterViewInit","ngAfterViewChecked","_this","isPlatformServer","length","nextSlidesLength","forEach","slickItem","push","runOutsideAngular","$instance","slick","nativeElement","idx","indexOf","filter","s","initSlick","jQuery","on","event","run","emit","config","currentIndex","initialSlide","currentSlide","nextSlide","addSlide","removeSlide","slickGoTo","index","slickNext","slickPrev","slickPause","slickPlay","undefined","ngOnChanges","changes","previousValue","currentValue","refresh_1","newOptions_1","Object","assign","Component","args","selector","exportAs","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","template","ElementRef","NgZone","Inject","PLATFORM_ID","Input","Output","SlickItemDirective","carousel","ngOnInit","isPlatformBrowser","Directive","decorators","type","Host","SlickCarouselModule","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import { isPlatformBrowser, isPlatformServer } from '@angular/common';\nimport {\n  AfterViewChecked,\n  AfterViewInit,\n  Component,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Host,\n  Inject,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  PLATFORM_ID,\n  SimpleChanges\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\ndeclare const jQuery: any;\n\n/**\n * Slick component\n */\n@Component({\n  selector: 'ngx-slick-carousel',\n  exportAs: 'slick-carousel',\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SlickCarouselComponent),\n    multi: true\n  }],\n  template: '<ng-content></ng-content>',\n})\nexport class SlickCarouselComponent implements OnDestroy, OnChanges, AfterViewInit, AfterViewChecked {\n\n  @Input() config: any;\n  @Output() afterChange: EventEmitter<any> = new EventEmitter();\n  @Output() beforeChange: EventEmitter<any> = new EventEmitter();\n  @Output() breakpoint: EventEmitter<any> = new EventEmitter();\n  @Output() destroy: EventEmitter<any> = new EventEmitter();\n  @Output() init: EventEmitter<any> = new EventEmitter();\n\n  public $instance: any;\n  public currentIndex: number;\n  public slides: any[] = [];\n  public initialized = false;\n  private _removedSlides: SlickItemDirective[] = [];\n  private _addedSlides: SlickItemDirective[] = [];\n\n  /**\n   * Constructor\n   */\n  constructor(private el: ElementRef,\n              private zone: NgZone,\n              @Inject(PLATFORM_ID) private platformId: string) {\n  }\n\n  /**\n   * On component destroy\n   */\n  ngOnDestroy() {\n    this.unslick();\n  }\n\n  ngAfterViewInit(): void {\n    this.ngAfterViewChecked();\n  }\n\n  /**\n   * On component view checked\n   */\n  ngAfterViewChecked() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    if (this._addedSlides.length > 0 || this._removedSlides.length > 0) {\n      const nextSlidesLength = this.slides.length - this._removedSlides.length + this._addedSlides.length;\n      if (!this.initialized) {\n        if (nextSlidesLength > 0) {\n          this.initSlick();\n        }\n        // if nextSlidesLength is zere, do nothing\n      } else if (nextSlidesLength === 0) { // unslick case\n        this.unslick();\n      } else {\n        this._addedSlides.forEach(slickItem => {\n          this.slides.push(slickItem);\n          this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickAdd', slickItem.el.nativeElement);\n          });\n        });\n        this._addedSlides = [];\n\n        this._removedSlides.forEach(slickItem => {\n          const idx = this.slides.indexOf(slickItem);\n          this.slides = this.slides.filter(s => s !== slickItem);\n          this.zone.runOutsideAngular(() => {\n            this.$instance.slick('slickRemove', idx);\n          });\n        });\n        this._removedSlides = [];\n      }\n    }\n  }\n\n  /**\n   * init slick\n   */\n  initSlick() {\n    this.slides = this._addedSlides;\n    this._addedSlides = [];\n    this._removedSlides = [];\n    this.zone.runOutsideAngular(() => {\n      this.$instance = jQuery(this.el.nativeElement);\n\n      this.$instance.on('init', (event, slick) => {\n        this.zone.run(() => {\n          this.init.emit({ event, slick });\n        });\n      });\n\n      this.$instance.slick(this.config);\n\n      this.zone.run(() => {\n        this.initialized = true;\n\n        this.currentIndex = (this.config && this.config.initialSlide) ? this.config.initialSlide : 0;\n      });\n\n      this.$instance.on('afterChange', (event, slick, currentSlide) => {\n        this.zone.run(() => {\n          this.afterChange.emit({ event, slick, currentSlide });\n          this.currentIndex = currentSlide;\n        });\n      });\n\n      this.$instance.on('beforeChange', (event, slick, currentSlide, nextSlide) => {\n        this.zone.run(() => {\n          this.beforeChange.emit({ event, slick, currentSlide, nextSlide });\n          this.currentIndex = nextSlide;\n        });\n      });\n\n      this.$instance.on('breakpoint', (event, slick, breakpoint) => {\n        this.zone.run(() => {\n          this.breakpoint.emit({ event, slick, breakpoint });\n        });\n      });\n\n      this.$instance.on('destroy', (event, slick) => {\n        this.zone.run(() => {\n          this.destroy.emit({ event, slick });\n          this.initialized = false;\n        });\n      });\n    });\n  }\n\n  addSlide(slickItem: SlickItemDirective) {\n    this._addedSlides.push(slickItem);\n  }\n\n  removeSlide(slickItem: SlickItemDirective) {\n    this._removedSlides.push(slickItem);\n  }\n\n  /**\n   * Slick Method\n   */\n  public slickGoTo(index: number) {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickGoTo', index);\n    });\n  }\n\n  public slickNext() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickNext');\n    });\n  }\n\n  public slickPrev() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickPrev');\n    });\n  }\n\n  public slickPause() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickPause');\n    });\n  }\n\n  public slickPlay() {\n    this.zone.runOutsideAngular(() => {\n      this.$instance.slick('slickPlay');\n    });\n  }\n\n  public unslick() {\n    if (this.$instance) {\n      this.zone.runOutsideAngular(() => {\n        this.$instance.slick('unslick');\n      });\n      this.$instance = undefined;\n    }\n    this.initialized = false;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.initialized) {\n      const config = changes['config'];\n      if (config.previousValue !== config.currentValue && config.currentValue !== undefined) {\n        const refresh = config.currentValue['refresh'];\n        const newOptions = Object.assign({}, config.currentValue);\n        delete newOptions['refresh'];\n\n        this.zone.runOutsideAngular(() => {\n          this.$instance.slick('slickSetOption', newOptions, refresh);\n        });\n      }\n    }\n  }\n\n}\n\n@Directive({\n  selector: '[ngxSlickItem]',\n})\nexport class SlickItemDirective implements OnInit, OnDestroy {\n  constructor(public el: ElementRef,\n              @Inject(PLATFORM_ID) private platformId: string,\n              @Host() private carousel: SlickCarouselComponent) {\n  }\n\n  ngOnInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.carousel.addSlide(this);\n    }\n  }\n\n  ngOnDestroy() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.carousel.removeSlide(this);\n    }\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {SlickCarouselComponent, SlickItemDirective} from './slick.component';\n\nexport * from './slick.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    SlickCarouselComponent,\n    SlickItemDirective,\n  ],\n  exports: [\n    SlickCarouselComponent,\n    SlickItemDirective,\n  ]\n})\nexport class SlickCarouselModule {\n}\n"]}