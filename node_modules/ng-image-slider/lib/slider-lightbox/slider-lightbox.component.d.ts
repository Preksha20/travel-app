import { ChangeDetectorRef, OnInit, OnChanges, SimpleChanges, AfterViewInit, OnDestroy, EventEmitter } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
import { NgImageSliderService } from './../ng-image-slider.service';
import * as ɵngcc0 from '@angular/core';
export declare class SliderLightboxComponent implements OnInit, OnChanges, AfterViewInit, OnDestroy {
    private cdRef;
    private sanitizer;
    imageSliderService: NgImageSliderService;
    private document;
    totalImages: number;
    nextImageIndex: number;
    popupWidth: number;
    marginLeft: number;
    lightboxPrevDisable: boolean;
    lightboxNextDisable: boolean;
    showLoading: boolean;
    effectStyle: string;
    speed: number;
    title: string;
    videoAutoPlay: boolean;
    currentImageIndex: number;
    showImage: any;
    direction: string;
    images: Array<object>;
    paginationShow: boolean;
    animationSpeed: number;
    infinite: boolean;
    arrowKeyMove: boolean;
    close: EventEmitter<any>;
    arrowClick: EventEmitter<any>;
    handleKeyboardEvent(event: KeyboardEvent): void;
    constructor(cdRef: ChangeDetectorRef, sanitizer: DomSanitizer, imageSliderService: NgImageSliderService, document: any);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    closeLightbox(): void;
    prevImageLightbox(): void;
    nextImageLightbox(): void;
    nextPrevDisable(): void;
    applyButtonDisableCondition(): void;
    getImageData(): void;
    resetState(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<SliderLightboxComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<SliderLightboxComponent, "slider-lightbox", never, {
    "videoAutoPlay": "videoAutoPlay";
    "currentImageIndex": "currentImageIndex";
    "direction": "direction";
    "images": "images";
    "paginationShow": "paginationShow";
    "infinite": "infinite";
    "arrowKeyMove": "arrowKeyMove";
    "animationSpeed": "animationSpeed";
    "showImage": "showImage";
}, {
    "close": "close";
    "arrowClick": "arrowClick";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGVyLWxpZ2h0Ym94LmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJzbGlkZXItbGlnaHRib3guY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7QUFHQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIE9uSW5pdCwgT25DaGFuZ2VzLCBTaW1wbGVDaGFuZ2VzLCBBZnRlclZpZXdJbml0LCBPbkRlc3Ryb3ksIEV2ZW50RW1pdHRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgRG9tU2FuaXRpemVyIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5pbXBvcnQgeyBOZ0ltYWdlU2xpZGVyU2VydmljZSB9IGZyb20gJy4vLi4vbmctaW1hZ2Utc2xpZGVyLnNlcnZpY2UnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgU2xpZGVyTGlnaHRib3hDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIE9uQ2hhbmdlcywgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIGNkUmVmO1xuICAgIHByaXZhdGUgc2FuaXRpemVyO1xuICAgIGltYWdlU2xpZGVyU2VydmljZTogTmdJbWFnZVNsaWRlclNlcnZpY2U7XG4gICAgcHJpdmF0ZSBkb2N1bWVudDtcbiAgICB0b3RhbEltYWdlczogbnVtYmVyO1xuICAgIG5leHRJbWFnZUluZGV4OiBudW1iZXI7XG4gICAgcG9wdXBXaWR0aDogbnVtYmVyO1xuICAgIG1hcmdpbkxlZnQ6IG51bWJlcjtcbiAgICBsaWdodGJveFByZXZEaXNhYmxlOiBib29sZWFuO1xuICAgIGxpZ2h0Ym94TmV4dERpc2FibGU6IGJvb2xlYW47XG4gICAgc2hvd0xvYWRpbmc6IGJvb2xlYW47XG4gICAgZWZmZWN0U3R5bGU6IHN0cmluZztcbiAgICBzcGVlZDogbnVtYmVyO1xuICAgIHRpdGxlOiBzdHJpbmc7XG4gICAgdmlkZW9BdXRvUGxheTogYm9vbGVhbjtcbiAgICBjdXJyZW50SW1hZ2VJbmRleDogbnVtYmVyO1xuICAgIHNob3dJbWFnZTogYW55O1xuICAgIGRpcmVjdGlvbjogc3RyaW5nO1xuICAgIGltYWdlczogQXJyYXk8b2JqZWN0PjtcbiAgICBwYWdpbmF0aW9uU2hvdzogYm9vbGVhbjtcbiAgICBhbmltYXRpb25TcGVlZDogbnVtYmVyO1xuICAgIGluZmluaXRlOiBib29sZWFuO1xuICAgIGFycm93S2V5TW92ZTogYm9vbGVhbjtcbiAgICBjbG9zZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgYXJyb3dDbGljazogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgaGFuZGxlS2V5Ym9hcmRFdmVudChldmVudDogS2V5Ym9hcmRFdmVudCk6IHZvaWQ7XG4gICAgY29uc3RydWN0b3IoY2RSZWY6IENoYW5nZURldGVjdG9yUmVmLCBzYW5pdGl6ZXI6IERvbVNhbml0aXplciwgaW1hZ2VTbGlkZXJTZXJ2aWNlOiBOZ0ltYWdlU2xpZGVyU2VydmljZSwgZG9jdW1lbnQ6IGFueSk7XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcbiAgICBuZ0FmdGVyVmlld0luaXQoKTogdm9pZDtcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkO1xuICAgIGNsb3NlTGlnaHRib3goKTogdm9pZDtcbiAgICBwcmV2SW1hZ2VMaWdodGJveCgpOiB2b2lkO1xuICAgIG5leHRJbWFnZUxpZ2h0Ym94KCk6IHZvaWQ7XG4gICAgbmV4dFByZXZEaXNhYmxlKCk6IHZvaWQ7XG4gICAgYXBwbHlCdXR0b25EaXNhYmxlQ29uZGl0aW9uKCk6IHZvaWQ7XG4gICAgZ2V0SW1hZ2VEYXRhKCk6IHZvaWQ7XG4gICAgcmVzZXRTdGF0ZSgpOiB2b2lkO1xufVxuIl19