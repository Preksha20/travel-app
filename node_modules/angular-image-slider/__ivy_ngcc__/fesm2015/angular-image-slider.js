import { __decorate } from 'tslib';
import { SecurityContext, Input, Component, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { interval } from 'rxjs';
import { DomSanitizer } from '@angular/platform-browser';
import { trigger, state, style, transition, animate } from '@angular/animations';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/platform-browser';
import * as ɵngcc2 from '@angular/common';

function SliderComponent_img_4_Template(rf, ctx) { if (rf & 1) {
    const _r4 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "img", 7);
    ɵngcc0.ɵɵlistener("@move.done", function SliderComponent_img_4_Template_img_animation_move_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.onFinish($event); })("@move.start", function SliderComponent_img_4_Template_img_animation_move_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r4); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5.onStart($event); });
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const url_r1 = ctx.$implicit;
    const i_r2 = ctx.index;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("@move", ctx_r0.state)("src", url_r1, ɵngcc0.ɵɵsanitizeUrl);
    ɵngcc0.ɵɵattribute("class", i_r2);
} }
let SliderComponent = class SliderComponent {
    constructor(sanitizer) {
        this.sanitizer = sanitizer;
        this.autoRotate = false;
        this.autoRotateAfter = 5000;
        this.autoRotateRight = true;
        this.safeUrls = [];
        this.state = 'void';
        this.disableSliderButtons = false;
    }
    ngOnInit() {
        this.images.forEach(element => {
            const safeUrl = this.sanitizer.sanitize(SecurityContext.URL, element);
            this.safeUrls.push(safeUrl);
        });
        this.imageUrls = this.safeUrls;
        if (this.autoRotate) {
            const source = interval(this.autoRotateAfter);
            this.subscription = source.subscribe(() => (this.autoRotateRight) ? this.moveLeft() : this.moveRight());
        }
    }
    imageRotate(arr, reverse) {
        if (reverse) {
            arr.unshift(arr.pop());
        }
        else {
            arr.push(arr.shift());
        }
        return arr;
    }
    moveLeft() {
        if (this.disableSliderButtons) {
            return;
        }
        this.state = 'right';
        this.imageRotate(this.imageUrls, true);
    }
    moveRight() {
        if (this.disableSliderButtons) {
            return;
        }
        this.state = 'left';
        this.imageRotate(this.imageUrls, false);
    }
    onFinish($event) {
        this.state = 'void';
        this.disableSliderButtons = false;
    }
    onStart($event) {
        this.disableSliderButtons = true;
    }
};
SliderComponent.ɵfac = function SliderComponent_Factory(t) { return new (t || SliderComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer)); };
SliderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SliderComponent, selectors: [["angular-image-slider"]], inputs: { autoRotate: "autoRotate", autoRotateAfter: "autoRotateAfter", autoRotateRight: "autoRotateRight", images: "images" }, decls: 10, vars: 1, consts: [["id", "container"], [1, "overlay-left"], [1, "overlay-right"], ["id", "grid", 1, "image-cropper"], ["alt", "", 3, "src", 4, "ngFor", "ngForOf"], ["id", "slider-buttons-left", 3, "click"], ["id", "slider-buttons-right", 3, "click"], ["alt", "", 3, "src"]], template: function SliderComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0);
        ɵngcc0.ɵɵelement(1, "div", 1);
        ɵngcc0.ɵɵelement(2, "div", 2);
        ɵngcc0.ɵɵelementStart(3, "div", 3);
        ɵngcc0.ɵɵtemplate(4, SliderComponent_img_4_Template, 1, 3, "img", 4);
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(5, "div");
        ɵngcc0.ɵɵelementStart(6, "a", 5);
        ɵngcc0.ɵɵlistener("click", function SliderComponent_Template_a_click_6_listener() { return ctx.moveLeft(); });
        ɵngcc0.ɵɵtext(7, "\u276E");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementStart(8, "a", 6);
        ɵngcc0.ɵɵlistener("click", function SliderComponent_Template_a_click_8_listener() { return ctx.moveRight(); });
        ɵngcc0.ɵɵtext(9, "\u276F");
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(4);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.imageUrls);
    } }, directives: [ɵngcc2.NgForOf], styles: ["#container[_ngcontent-%COMP%]{position:relative;overflow-x:hidden}#grid[_ngcontent-%COMP%]{display:-ms-grid;display:grid;height:150;-ms-grid-columns:(1fr)[3];grid-template-columns:repeat(3,1fr);-ms-grid-rows:300px;grid-template-rows:300px;grid-column-gap:20px}.overlay-left[_ngcontent-%COMP%]{position:absolute;display:inline-block;display:-ms-grid;display:grid;width:7rem;height:100%;top:0;left:0;bottom:0;background-color:#fff;z-index:1;cursor:pointer}.overlay-right[_ngcontent-%COMP%]{position:absolute;display:inline-block;display:-ms-grid;display:grid;width:7rem;height:100%;top:0;right:0;bottom:0;background-color:#fff;z-index:1;cursor:pointer}#grid[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{background-color:gray}#slider-buttons-left[_ngcontent-%COMP%]{position:absolute;z-index:1000;top:130px;float:left;cursor:pointer;font-size:250%;color:#789;left:60px}#slider-buttons-right[_ngcontent-%COMP%]{position:absolute;top:130px;z-index:1000;float:right;cursor:pointer;font-size:250%;color:#789;right:60px}.image-cropper[_ngcontent-%COMP%]{height:300px;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center}.image-cropper[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:100%;max-height:100%;display:block;margin:0 auto}"], data: { animation: [
            trigger('move', [
                state('in', style({ transform: 'translateX(0)' })),
                transition('void => left', [
                    style({ transform: 'translateX(100%)' }),
                    animate(200)
                ]),
                transition('left => void', [
                    animate(200, style({ transform: 'translateX(0)' }))
                ]),
                transition('void => right', [
                    style({ transform: 'translateX(-100%)' }),
                    animate(200)
                ]),
                transition('right => void', [
                    animate(200, style({ transform: 'translateX(0)' }))
                ])
            ])
        ] } });
SliderComponent.ctorParameters = () => [
    { type: DomSanitizer }
];
__decorate([
    Input()
], SliderComponent.prototype, "images", void 0);
__decorate([
    Input()
], SliderComponent.prototype, "autoRotate", void 0);
__decorate([
    Input()
], SliderComponent.prototype, "autoRotateAfter", void 0);
__decorate([
    Input()
], SliderComponent.prototype, "autoRotateRight", void 0);

let SliderModule = class SliderModule {
};
SliderModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: SliderModule });
SliderModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function SliderModule_Factory(t) { return new (t || SliderModule)(); }, imports: [[
            CommonModule
        ]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SliderComponent, [{
        type: Component,
        args: [{
                selector: 'angular-image-slider',
                template: "<div id=\"container\">\n  <div class=\"overlay-left\"></div>\n  <div class=\"overlay-right\"></div>\n  <div id=\"grid\" class=\"image-cropper\">\n    <img *ngFor=\"let url of imageUrls; let i = index\" \n      [@move]=\"state\" \n      (@move.done)=\"onFinish($event)\" \n      (@move.start)=\"onStart($event)\" \n      [attr.class]=\"i\" \n      [src]=\"url\"\n      alt=\"\" />\n  </div>\n  <div>\n    <a id=\"slider-buttons-left\" (click)=\"moveLeft()\">&#10094;</a>\n    <a id=\"slider-buttons-right\" (click)=\"moveRight()\">&#10095;</a>\n  </div>\n</div>",
                animations: [
                    trigger('move', [
                        state('in', style({ transform: 'translateX(0)' })),
                        transition('void => left', [
                            style({ transform: 'translateX(100%)' }),
                            animate(200)
                        ]),
                        transition('left => void', [
                            animate(200, style({ transform: 'translateX(0)' }))
                        ]),
                        transition('void => right', [
                            style({ transform: 'translateX(-100%)' }),
                            animate(200)
                        ]),
                        transition('right => void', [
                            animate(200, style({ transform: 'translateX(0)' }))
                        ])
                    ])
                ],
                styles: ["#container{position:relative;overflow-x:hidden}#grid{display:-ms-grid;display:grid;height:150;-ms-grid-columns:(1fr)[3];grid-template-columns:repeat(3,1fr);-ms-grid-rows:300px;grid-template-rows:300px;grid-column-gap:20px}.overlay-left{position:absolute;display:inline-block;display:-ms-grid;display:grid;width:7rem;height:100%;top:0;left:0;bottom:0;background-color:#fff;z-index:1;cursor:pointer}.overlay-right{position:absolute;display:inline-block;display:-ms-grid;display:grid;width:7rem;height:100%;top:0;right:0;bottom:0;background-color:#fff;z-index:1;cursor:pointer}#grid>div{background-color:gray}#slider-buttons-left{position:absolute;z-index:1000;top:130px;float:left;cursor:pointer;font-size:250%;color:#789;left:60px}#slider-buttons-right{position:absolute;top:130px;z-index:1000;float:right;cursor:pointer;font-size:250%;color:#789;right:60px}.image-cropper{height:300px;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center}.image-cropper img{max-width:100%;max-height:100%;display:block;margin:0 auto}"]
            }]
    }], function () { return [{ type: ɵngcc1.DomSanitizer }]; }, { autoRotate: [{
            type: Input
        }], autoRotateAfter: [{
            type: Input
        }], autoRotateRight: [{
            type: Input
        }], images: [{
            type: Input
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SliderModule, { declarations: function () { return [SliderComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [SliderComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SliderModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule
                ],
                declarations: [
                    SliderComponent
                ],
                exports: [SliderComponent]
            }]
    }], null, null); })();

/**
 * Generated bundle index. Do not edit.
 */

export { SliderModule, SliderComponent as ɵa };

//# sourceMappingURL=angular-image-slider.js.map